global !p
endglobal

snippet #context/ "context.js" b
// @flow
import { createContext } from 'react'

type ContextType = {
	$0
}

const initState = {
}

export default (createContext(initState): React$Context<ContextType>)
endsnippet

snippet #page/ "Page Functional Component" b
// @flow
import React from 'react'

export default function ${1:Index}Page (${2:props}: Page$Props): React$Node {
	return null$0
}
endsnippet

snippet #fc/ "Named Functional Component" b
// @flow
import React from 'react'

type Props = {|
	+className?: string,
	+children?: React$Node
|}

export function ${0:Component0} (props: Props): React$Node {
	return null
}
endsnippet

snippet #cc/ "Named Class Component" b
// @flow
import React, { Component } from 'react'

type Props = {|
	+className?: string,
	+children?: React$Node
|}

export class ${0:Component0} extends Component<Props> {
	render (): React$Node {
		return null
	}
}
endsnippet

snippet #ifc/ "Inline Functional Component" b
const ${0:Component0} = (props) => (
	null
)
endsnippet
