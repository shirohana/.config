global !p
import snippets
m_props = {
  'a': 'auto',
  'i': 'inherit',
  'r': 'initial'
}
directions = {
  't': 'top',
  'r': 'right',
  'b': 'bottom',
  'l': 'left'
}
endglobal

# margin:
snippet m "margin: " b
margin: $0
endsnippet

# margin: {prop}
snippet /\bm:([air])/ "/m:[air]/ => margin: (auto|inherit|initial)" rb
margin: `!p snip.rv = m_props[match.group(1)]`
$0
endsnippet

# margin: {number}{unit} {number}{unit}
snippet /\bm(-?\d+(?:\.\d+)?)(\w+|%)?(?:-(-?\d+(?:\.\d+)?)(\w+|%)?)?/ "m20, m20%-40%, m1em-1.5em, ..." rb
margin: `!p
v = snippets.unit(*match.group(1, 2))
h = snippets.unit(*match.group(3, 4))
snip.rv = v + (' ' + h if h else '')`
$0
endsnippet

# margin-{direction}:
snippet /\bm([trbl])/ "/m[trbl]/ => margin-(top|right|bottom|left):" rb
margin-`!p snip.rv = directions[match.group(1)]`: $0
endsnippet

# margin-{direction}: {prop}
snippet /\bm([trbl]):([air])/ "/m[trbl]:[air]/ => margin-(top|right|bottom|left): (auto|inherit|initial)" rb
margin-`!p snip.rv = directions[match.group(1)]`: `!p snip.rv = m_props[match.group(2)]`
$0
endsnippet

# margin-{direction}: {number}{unit}
snippet /\bm([trbl])(-?\d+(?:\.\d+)?)(\w+|%)?/ "mt20, mb-2em, ml50%, ..." rb
margin-`!p snip.rv = directions[match.group(1)]`: `!p snip.rv = snippets.unit(*match.group(2, 3))`
$0
endsnippet
